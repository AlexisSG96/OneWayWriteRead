@ECHO OFF
start cmd /k dotnet run --project C:\Users\Valkyrie\source\repos\TCP\Server\Server.csproj 
start cmd /k dotnet run --project C:\Users\Valkyrie\source\repos\TCP\Client\Client.csproj
start cmd /k dotnet run --project C:\Users\Valkyrie\source\repos\TCP\Client\Client.csproj
PAUSE

------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text;
using System.Net.Sockets;
using System.IO;

namespace Client
{
    class TCPClient
    {
        private static long messagesInterchanged = 1;
        private static TcpClient client = null;
        private static NetworkStream stream = null;
        public static void Connect(String message)
        {
            try
            {
                // Create a TcpClient.
                // Note, for this client to work you need to have a TcpServer
                // connected to the same address as specified by the server, port
                // combination.
                Int32 port = 13000;
                String server = "127.0.0.1";
                client = new TcpClient(server, port);

                // Translate the passed message into ASCII and store it as a Byte array.
                Byte[] data = System.Text.Encoding.ASCII.GetBytes(message);

                // Get a client stream for reading and writing.
                //  Stream stream = client.GetStream();

                stream = client.GetStream();

                // Send the message to the connected TcpServer.
                stream.Write(data, 0, data.Length);

                Console.WriteLine("Sent: {0}", message);

                // Receive the TcpServer.response.

                // Buffer to store the response bytes.
                data = new Byte[256];

                // String to store the response ASCII representation.
                String responseData = String.Empty;

                // Read the first batch of the TcpServer response bytes.
                Int32 bytes = stream.Read(data, 0, data.Length);
                responseData = System.Text.Encoding.ASCII.GetString(data, 0, bytes);
                Console.WriteLine("Received: {0}", responseData);

                // Close everything.
                stream.Close();
                Console.WriteLine($"Messages Interchanged: {messagesInterchanged}");
                messagesInterchanged++;
                //client.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Exception: {0}", ex);
                stream.Flush();
                stream.Close();
                client.Close();
            }

            //Console.WriteLine("\n Press Enter to continue...");
            //Console.Read();
        }
        ~TCPClient()
        {
            stream.Close();
            client.Close();
        }
    }
}

using System;

namespace Client
{
    class Program
    {
        static void Main(string[] args)
        {
            String message;
            while (true)
            {
                message = generateRandomSeq(5);
                TCPClient.Connect(message);
            }
        }

        static string generateRandomSeq(int strLength)
        {
            Random rand = new Random();
            const string allowedChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            char[] chars = new char[strLength];
            for (int i = 0; i < strLength; i++)
            {
                chars[i] = allowedChars[rand.Next(0, allowedChars.Length)];
            }
            return new string(chars);
        }
    }
}

-----------------------------------------------------------------------------------------

using System;
using System.Net;
using System.Net.Sockets;

namespace Server
{
    class Program
    {
        static void Main(string[] args)
        {
            while (true) 
            {
                TCPServer.Connect();
            }
        }
    }
}

using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text;

namespace Server
{
    class TCPServer
    {
        private static TcpListener server = null;
        private static TcpClient client = null;
        public static void Connect()
        {
            server = null;
            try
            {
                // Set the TcpListener on port 13000.
                Int32 port = 13000;
                IPAddress localAddr = IPAddress.Parse("127.0.0.1");

                // TcpListener server = new TcpListener(port);
                server = new TcpListener(localAddr, port);

                // Start listening for client requests.
                server.Start();

                // Buffer for reading data
                Byte[] bytes = new Byte[256];
                String data = null;

                // Enter the listening loop.
                while (true)
                {
                    Console.Write("Waiting for a connection... ");

                    // Perform a blocking call to accept requests.
                    // You could also use server.AcceptSocket() here.
                    client = server.AcceptTcpClient();
                    Console.WriteLine("Connected!");

                    data = null;

                    // Get a stream object for reading and writing
                    NetworkStream stream = client.GetStream();

                    int i;

                    // Loop to receive all the data sent by the client.
                    while ((i = stream.Read(bytes, 0, bytes.Length)) != 0)
                    {
                        // Translate data bytes to a ASCII string.
                        data = System.Text.Encoding.ASCII.GetString(bytes, 0, i);
                        Console.WriteLine("Received: {0}", data);
                        AppendToFile(data);
                        // Process the data sent by the client.
                        data = data.ToUpper();

                        byte[] msg = System.Text.Encoding.ASCII.GetBytes(data);

                        // Send back a response.
                        stream.Write(msg, 0, msg.Length);
                        Console.WriteLine("Sent: {0}", data);
                    }

                    // Shutdown and end connection
                    //client.Close();
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Exception: {0}", ex);
                if (client != null)
                {
                    client.Close();
                }
            }
            //finally
            //{
            //    // Stop listening for new clients.
            //    server.Stop();
            //}

            //Console.WriteLine("\nHit enter to continue...");
            //Console.Read();
        }
        private static void AppendToFile(string message)
        {
            const string datePatt = @"yyyy mm dd H:mm:ss";
            DateTime dateTimeUTC = DateTime.UtcNow;
            string dtString = "[" + dateTimeUTC.ToString(datePatt) + " UTC] " + message;
            using (StreamWriter stream = File.AppendText("Log.txt"))
            {
                stream.WriteLine($"{dtString}");
            }

        }
        ~TCPServer()
        {
            client.Close();
            server.Stop();
        }
    }
}
